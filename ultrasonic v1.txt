#define F_CPU 16000000    // AVR clock frequency in Hz, used by util/delay.h
#include <avr/io.h>
#include <util/delay.h>
 
int main() {
	
//this code is written in AVR-C. Written for the Atmega328P
//It can be loaded on an arduino board using an ISP programmer - be it another arduino or a 3rd party device
//There are two timers configured here, timer0 (8 bit) and timer1 (16 bit)
//The timers are configured to toggle on compare matching. So the duty cycle is 50%
//Future: setup timer2

//these constants determine the output frequency and
//the option to select a prescaler of 1 or 8

//Applies to Timer0. if this is set to 1 the prescaler for will be 8. if it's set to 0 the prescaler will be 0
const bool ScaleTimer0ByEight = 1; 

//Applies to Timer1. if this is set to 1 the prescaler for will be 8. if it's set to 0 the prescaler will be 0
const bool ScaleTimer1ByEight = 0;

//this determines the output frequency of timer0
//this output is taken from arduino pin6
const int timer0count = 25; 

//this determines the output frequency of timer1
//this output is taken from arduino pin9
const int timer1count = 210; //note this frequency is not prescaled 


// set output pins using data direction
DDRD |= (1 << DDD6); // Port D6 as output. arduino pin 6
DDRB |= (1 << DDB1); // Port B1 as output. arduino pin 9

//timer0
//timer 0 register configuration for CTC mode, prescaler, and compare match
if (ScaleTimer0ByEight == 1){
  TCCR0B |= (1 << CS01); // set prescaler to 8
}
else{
  TCCR0B |= (1 << CS00); // set prescaler to 0	
}

TCCR0A |= (1 << WGM01); //put timer 0 in ctc mode a mode where the top is defined in register OCR0A
TCCR0A |= (1 << COM0A0); // turn on bits in compare match to enable set on match, clear on bottom.

//set frequency of timer0
OCR0A = timer0count; //set value to trigger compare match. This determines the frequency on PORTD6


//timer 1 register configuration for CTC mode, prescaler, and compare match
if(ScaleTimer1ByEight ==1){
  TCCR1B |= (1 << CS11); // set prescaler to 8
}
else{
  TCCR1B |= (1 << CS10); // set prescaler to 0
}
TCCR1B |= (1 << WGM12); //put timer 0 in ctc mode a mode where the top is defined in register OCR0A
TCCR1A |= (1 <<COM1A0); // turn on bits in compare match to toggle.

//set frequency and duty of timer 1
OCR1A = timer1count; //set value to trigger compare match. this determines the frequency on pin PORTB1


while (1) //infinite loop. This can be commented out.
{}
}


